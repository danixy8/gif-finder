{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAyCeA,EAtCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGDC,mBAAS,IAHR,mBAG9BC,EAH8B,KAGlBC,EAHkB,KAuBjC,OACO,sBAAMC,SAfI,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAEtCN,EAAc,MAQX,SACK,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBM,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCQhBG,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAWH,GADtD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGSA,EAAKC,OAHd,uBAGLC,EAHK,EAGLA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAaLM,GAbK,4CAAH,sDCYEO,EAVK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE/B,OACI,sBAAKc,UAAU,6EAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCwBGO,EA5BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAIR,CAACpB,IAGGqB,EDvB0BM,CAAc3B,GAAlCa,EAFe,EAEpBN,KAAaa,EAFO,EAEPA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,sDAAd,SAAsEhB,IAExEoB,GAAW,mBAAGJ,UAAU,oEAAb,wBAEb,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAEC,GAAF,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,aEcvBiB,EA9BM,WAAO,IAAD,EAGa1C,mBAAS,CAAC,cAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAMvB,OACI,qCACI,8CACA,uBAEJ,cAAC,EAAD,CAAaA,cAAeA,IAExB,6BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GACLA,YCjB7B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.634bbdfa.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n\n        if(inputValue.trim().length > 2){\n\n            setCategories(cats => [inputValue, ...cats] )\n\n            setInputValue('')\n\n        }\n\n\n    }\n\n        return (\n               <form onSubmit={ handleSubmit}>\n                    <input \n                        type=\"text\"\n                        value={inputValue} \n                        onChange={handleInputChange}\n                    />\n                </form> \n        )\n    }\n\n    AddCategory.propTypes = {\n        setCategories: PropTypes.func.isRequired\n    }\n\nexport default AddCategory\n","\nconst getGifs = async( category ) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=1ZtqaDuUulFbfMnEmbfAjj0JouPNVddG`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n\nexport default getGifs;","import React from 'react'\n\n\nconst GifGridItem = ( { id, title, url } ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeInDown animate__delay-1s animate__fast\">\n            <img src={ url } alt={ title }/>\n            <p> { title } </p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__delay-3s animate__fadeIn\">{ category }</h3>\n\n        { loading && <p className=\"animate__animated animate__bounce animate__fast animate__repeat-2\">Loading...</p>  }\n\n        <div className=\"card-grid\">\n \n                {\n                    images.map(( img ) => (\n                        <GifGridItem\n                            key={ img.id }\n                            { ...img }\n                        />\n                    )) \n                }\n            \n            \n        </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport getGifs from \"../helpers/getGifs\"\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( ()=>{\n\n        getGifs( category )\n        .then( imgs => {\n                \n            setTimeout(() => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n\n            }, 1000);          \n\n        })\n\n    }, [category])\n\n\n    return state;\n\n}","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    \n    const [categories, setCategories] = useState(['One Punch']);\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr/>\n\n        <AddCategory setCategories={setCategories}/>\n\n            <ol>\n            {\n                categories.map(category => \n                    <GifGrid \n                        category={category}\n                        key={category}\n                    />\n                )\n            }\n            </ol>\n        \n        \n        </>\n\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}